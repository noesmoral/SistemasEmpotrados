[Version Actor SW]
5
0
0
0
0
[Modificado]
1
1
0
[Estructura]
[Version Estructura]
3
[Parametro]
NULL
 
 
[FinParametro]
[Stack]
1
[FinStack]
[Puertos]
2
[Version Puerto]
0
pServReq
0
1
0
[Version Grafico Puerto]
0
4
42
CPService
[Version Puerto]
0
Timer
0
1
1
[Version Grafico Puerto]
0
55
44
EDROOMTimingSAP
[FinPuertos]
[ActoresComponente]
0
[FinActoresComponente]
[Uniones]
0
[FinUniones]
[NumTimers]
2
[FinNumTimers]
[NumMsgDef]
10
[FinNumMsgDef]
[FinEstructura]
[Comportamiento]
[Version Comportamiento]
3
0
[Pools]
0
[Modulos]
0
[Eventos]
1
[Event]
[Version]
1
EvTimerTimer
Timer
[Maquina de Estados]
[Version Maquina de Estados]
1
Top
NULL
[Subestados]
4
[Version SubEstados]
3
I
;
;
;
;
;
0
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
73 73 55 55
[FinObjetoGrafico]
Idle
FProgRequest();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
255 328 90 60
[FinObjetoGrafico]
Working
FProgWorking();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
400 188 90 60
[FinObjetoGrafico]
Wait
FProgWait();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
258 158 90 60
[FinObjetoGrafico]
[PuntosEleccion]
2
[Version PuntosEleccion]
2
ReqRes
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
277 251 35 35
[FinObjetoGrafico]
TryAgain
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
293 70 35 35
[FinObjetoGrafico]
ReqRes
1
[Ramas]
2
[Version Ramas]
4
Nack
true
Wait
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
285 253 280 218 3
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
309 261 415 248 1
[FinGraficoRama]
TryAgain
1
[Ramas]
2
[Version Ramas]
4
Nack
true
Wait
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
300 102 272 158 2
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
321 99 420 188 0
[FinGraficoRama]
[Transiciones]
4
[Version Transicion]
4
ReqRes
Idle
OSubEst
ReqRes
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
[GraficoTransicion]
[Version GraficoTransicion]
0
296 328 294 285 3
[FinGraficoTransicion]
TryAgain
Wait
OSubEst
TryAgain
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
[GraficoTransicion]
[Version GraficoTransicion]
0
313 158 310 104 3
[FinGraficoTransicion]
FreeRes
Working
OSubEst
Idle
DSubEst
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
FFreeRes();
;
0
[GraficoTransicion]
[Version GraficoTransicion]
0
463 248 345 350 2
[FinGraficoTransicion]
Init
I
OSubEstI
Idle
DSubEst
;
[Trigger]
EDROOMsl
EDROOMStart
true
 
 
 
;
;
;
0
[GraficoTransicion]
[Version GraficoTransicion]
0
115 121 255 340 0
[FinGraficoTransicion]
[VariablesConstantes]
0
[Metodos]
6
[Version Metodos]
21
SendMsg
FFreeRes()
0
0
0
0
1
 
0
[ServiceRequest]
send
pServReq
SFreeRes
NULL
EDROOMprioNormal
Inform
FProgRequest()
0
0
0
0
1
 
7
	 
	//Timing Service useful methods
	 
	//interval = Pr_Time(X,Y); // interval of X sec + Y microsec
 
	interval =Pr_Time(3,0);
	printf("%s is sleeping\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
 
 
Inform
FProgWait()
0
0
0
0
1
 
7
	 
	//Timing Service useful methods
	 
	//interval = Pr_Time(X,Y); // interval of X sec + Y microsec
 
	interval=Pr_Time(1,0);
	printf("%s is waiting\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
 
 
Inform
FProgWorking()
0
0
0
0
1
 
7
	 
	//Timing Service useful methods
	 
	//interval = Pr_Time(X,Y); // interval of X sec + Y microsec
 
	interval =Pr_Time(2,0);
	printf("%s is working\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
NULL
EDROOMprioNormal
InvokeMsg
FResRequest()
0
0
0
0
1
 
0
[ServiceRequest]
invoke
pServReq
SResReq
NULL
EDROOMprioVeryHigh
Guard
GIsAck()
0
0
0
0
1
 
1
	return (MsgBack->signal==SResAck);
[MaquinasSubEstados]
0
[FinMaquinasSubEstados]
[Fin Maquina de Estados]
[FinComportamiento]
