//##############################################################################
//###############     This file has been generated by EDROOM     ###############
//##############################################################################
 
 
#include <edroom_glue/edroomdeployment.h>
 
//*****************************************************************************
//Main Wait
 
void MainWait(CAClient   &comp2,
					CAClient   &comp3,
					CAClient   &comp4,
					CAClient   &comp5,
					CAClient   &comp6,
					CAClient   &comp7,
					CAClient   &comp8,
					CAClient   &comp9,
					CAServer   &comp11,
					CAServer   &comp12){
 
	Pr_Time waitTime(3, 0);
 
#ifdef _EDROOM_SYSTEM_CLOSE
	while(!comp2.EDROOMIsComponentFinished()
				||!comp3.EDROOMIsComponentFinished()
				||!comp4.EDROOMIsComponentFinished()
				||!comp5.EDROOMIsComponentFinished()
				||!comp6.EDROOMIsComponentFinished()
				||!comp7.EDROOMIsComponentFinished()
				||!comp8.EDROOMIsComponentFinished()
				||!comp9.EDROOMIsComponentFinished()
				||!comp11.EDROOMIsComponentFinished()
				||!comp12.EDROOMIsComponentFinished())
#else
	while(true)
#endif

 
		Pr_DelayIn(waitTime);
}
 
//*****************************************************************************
//SetMemory
 
void CEDROOMSystemMemory::SetMemory(){
 
	comp2Memory.SetMemory(10, comp2Messages, &comp2MessagesMarks[0]
					,15,comp2QueueNodes, &comp2QueueNodesMarks[0]);
	comp3Memory.SetMemory(10, comp3Messages, &comp3MessagesMarks[0]
					,15,comp3QueueNodes, &comp3QueueNodesMarks[0]);
	comp4Memory.SetMemory(10, comp4Messages, &comp4MessagesMarks[0]
					,15,comp4QueueNodes, &comp4QueueNodesMarks[0]);
	comp5Memory.SetMemory(10, comp5Messages, &comp5MessagesMarks[0]
					,15,comp5QueueNodes, &comp5QueueNodesMarks[0]);
	comp6Memory.SetMemory(10, comp6Messages, &comp6MessagesMarks[0]
					,15,comp6QueueNodes, &comp6QueueNodesMarks[0]);
	comp7Memory.SetMemory(10, comp7Messages, &comp7MessagesMarks[0]
					,15,comp7QueueNodes, &comp7QueueNodesMarks[0]);
	comp8Memory.SetMemory(10, comp8Messages, &comp8MessagesMarks[0]
					,15,comp8QueueNodes, &comp8QueueNodesMarks[0]);
	comp9Memory.SetMemory(10, comp9Messages, &comp9MessagesMarks[0]
					,15,comp9QueueNodes, &comp9QueueNodesMarks[0]);
	comp11Memory.SetMemory(10, comp11Messages, &comp11MessagesMarks[0]
					,14,comp11QueueNodes, &comp11QueueNodesMarks[0]);
	comp12Memory.SetMemory(10, comp12Messages, &comp12MessagesMarks[0]
					,14,comp12QueueNodes, &comp12QueueNodesMarks[0]);
}
 
//*****************************************************************************
//SetComponents
 
void CEDROOMSystemCommSAP::SetComponents(CAClient   *p_comp2,
										CAClient   *p_comp3,
										CAClient   *p_comp4,
										CAClient   *p_comp5,
										CAClient   *p_comp6,
										CAClient   *p_comp7,
										CAClient   *p_comp8,
										CAClient   *p_comp9,
										CAServer   *p_comp11,
										CAServer   *p_comp12){
	mp_comp2=p_comp2;
	mp_comp3=p_comp3;
	mp_comp4=p_comp4;
	mp_comp5=p_comp5;
	mp_comp6=p_comp6;
	mp_comp7=p_comp7;
	mp_comp8=p_comp8;
	mp_comp9=p_comp9;
	mp_comp11=p_comp11;
	mp_comp12=p_comp12;
}
 
 
//*****************************************************************************
//*****************************************************************************
//Signal Translation Functions
//*****************************************************************************
//*****************************************************************************
 
 
TEDROOMSignal CEDROOMSystemCommSAP::C5Client4_PpServReq__C11Server_PpService4(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C11Server_PpService4__C5Client4_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C4Client3_PpServReq__C11Server_PpService3(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C11Server_PpService3__C4Client3_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3Client2_PpServReq__C11Server_PpService2(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C11Server_PpService2__C3Client2_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C2Client1_PpServReq__C11Server_PpService1(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C11Server_PpService1__C2Client1_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C9Client8_PpServReq__C12Server2_PpService4(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C12Server2_PpService4__C9Client8_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C8Client7_PpServReq__C12Server2_PpService3(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C12Server2_PpService3__C8Client7_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C7Client6_PpServReq__C12Server2_PpService2(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C12Server2_PpService2__C7Client6_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C6Client5_PpServReq__C12Server2_PpService1(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAClient::SFreeRes):	 signalIn=CAServer::SFreeRes; break;
 
		case( CAClient::SResReq):	 signalIn=CAServer::SResReq; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C12Server2_PpService1__C6Client5_PpServReq(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CAServer::SResAck):	 signalIn=CAClient::SResAck; break;
 
		case( CAServer::SResNack):	 signalIn=CAClient::SResNack; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
 
 
//*****************************************************************************
//RegisterInterfaces
 
void CEDROOMSystemCommSAP::RegisterInterfaces(){
 
	// Register Interface for Component 2
	m_localCommSAP.RegisterInterface(1, mp_comp2->ResConfigTimer, mp_comp2);
	m_localCommSAP.RegisterInterface(2, mp_comp2->Timer, mp_comp2);
	m_localCommSAP.RegisterInterface(3, mp_comp2->pServReq, mp_comp2);
 
	// Register Interface for Component 3
	m_localCommSAP.RegisterInterface(1, mp_comp3->ResConfigTimer, mp_comp3);
	m_localCommSAP.RegisterInterface(2, mp_comp3->Timer, mp_comp3);
	m_localCommSAP.RegisterInterface(3, mp_comp3->pServReq, mp_comp3);
 
	// Register Interface for Component 4
	m_localCommSAP.RegisterInterface(1, mp_comp4->ResConfigTimer, mp_comp4);
	m_localCommSAP.RegisterInterface(2, mp_comp4->Timer, mp_comp4);
	m_localCommSAP.RegisterInterface(3, mp_comp4->pServReq, mp_comp4);
 
	// Register Interface for Component 5
	m_localCommSAP.RegisterInterface(1, mp_comp5->ResConfigTimer, mp_comp5);
	m_localCommSAP.RegisterInterface(2, mp_comp5->Timer, mp_comp5);
	m_localCommSAP.RegisterInterface(3, mp_comp5->pServReq, mp_comp5);
 
	// Register Interface for Component 6
	m_localCommSAP.RegisterInterface(1, mp_comp6->ResConfigTimer, mp_comp6);
	m_localCommSAP.RegisterInterface(2, mp_comp6->Timer, mp_comp6);
	m_localCommSAP.RegisterInterface(3, mp_comp6->pServReq, mp_comp6);
 
	// Register Interface for Component 7
	m_localCommSAP.RegisterInterface(1, mp_comp7->ResConfigTimer, mp_comp7);
	m_localCommSAP.RegisterInterface(2, mp_comp7->Timer, mp_comp7);
	m_localCommSAP.RegisterInterface(3, mp_comp7->pServReq, mp_comp7);
 
	// Register Interface for Component 8
	m_localCommSAP.RegisterInterface(1, mp_comp8->ResConfigTimer, mp_comp8);
	m_localCommSAP.RegisterInterface(2, mp_comp8->Timer, mp_comp8);
	m_localCommSAP.RegisterInterface(3, mp_comp8->pServReq, mp_comp8);
 
	// Register Interface for Component 9
	m_localCommSAP.RegisterInterface(1, mp_comp9->ResConfigTimer, mp_comp9);
	m_localCommSAP.RegisterInterface(2, mp_comp9->Timer, mp_comp9);
	m_localCommSAP.RegisterInterface(3, mp_comp9->pServReq, mp_comp9);
 
	// Register Interface for Component 11
	m_localCommSAP.RegisterInterface(1, mp_comp11->pService4, mp_comp11);
	m_localCommSAP.RegisterInterface(2, mp_comp11->pService3, mp_comp11);
	m_localCommSAP.RegisterInterface(3, mp_comp11->pService2, mp_comp11);
	m_localCommSAP.RegisterInterface(4, mp_comp11->pService1, mp_comp11);
 
	// Register Interface for Component 12
	m_localCommSAP.RegisterInterface(1, mp_comp12->pService4, mp_comp12);
	m_localCommSAP.RegisterInterface(2, mp_comp12->pService3, mp_comp12);
	m_localCommSAP.RegisterInterface(3, mp_comp12->pService2, mp_comp12);
	m_localCommSAP.RegisterInterface(4, mp_comp12->pService1, mp_comp12);
 
}
 
 
//*****************************************************************************
////SetLocalConnections
 
void CEDROOMSystemCommSAP::SetLocalConnections(){
 
	m_localCommSAP.Connect(mp_comp5->pServReq, mp_comp11->pService4, connections[0], 
					C5Client4_PpServReq__C11Server_PpService4, 
					C11Server_PpService4__C5Client4_PpServReq);
 
	m_localCommSAP.Connect(mp_comp4->pServReq, mp_comp11->pService3, connections[1], 
					C4Client3_PpServReq__C11Server_PpService3, 
					C11Server_PpService3__C4Client3_PpServReq);
 
	m_localCommSAP.Connect(mp_comp3->pServReq, mp_comp11->pService2, connections[2], 
					C3Client2_PpServReq__C11Server_PpService2, 
					C11Server_PpService2__C3Client2_PpServReq);
 
	m_localCommSAP.Connect(mp_comp2->pServReq, mp_comp11->pService1, connections[3], 
					C2Client1_PpServReq__C11Server_PpService1, 
					C11Server_PpService1__C2Client1_PpServReq);
 
	m_localCommSAP.Connect(mp_comp9->pServReq, mp_comp12->pService4, connections[4], 
					C9Client8_PpServReq__C12Server2_PpService4, 
					C12Server2_PpService4__C9Client8_PpServReq);
 
	m_localCommSAP.Connect(mp_comp8->pServReq, mp_comp12->pService3, connections[5], 
					C8Client7_PpServReq__C12Server2_PpService3, 
					C12Server2_PpService3__C8Client7_PpServReq);
 
	m_localCommSAP.Connect(mp_comp7->pServReq, mp_comp12->pService2, connections[6], 
					C7Client6_PpServReq__C12Server2_PpService2, 
					C12Server2_PpService2__C7Client6_PpServReq);
 
	m_localCommSAP.Connect(mp_comp6->pServReq, mp_comp12->pService1, connections[7], 
					C6Client5_PpServReq__C12Server2_PpService1, 
					C12Server2_PpService1__C6Client5_PpServReq);
 
}
 
 
//*****************************************************************************
////SetRemoteConnections
 
void CEDROOMSystemCommSAP::SetRemoteConnections(){
 
}
 
//*****************************************************************************
////SetConnections
 
void CEDROOMSystemCommSAP::SetConnections(){
 
	SetLocalConnections();
	SetRemoteConnections();
 
}
 
//*****************************************************************************
////CEDROOMSystemDeployment Constructor
 
CEDROOMSystemDeployment::CEDROOMSystemDeployment(){
 
#ifdef CONFIG_EDROOMSL_ADD_TRACE
#endif
	systemMemory.SetMemory();
 
}
 
//*****************************************************************************
////Config
 
void CEDROOMSystemDeployment::Config(CAClient   *p_comp2,
											CAClient   *p_comp3,
											CAClient   *p_comp4,
											CAClient   *p_comp5,
											CAClient   *p_comp6,
											CAClient   *p_comp7,
											CAClient   *p_comp8,
											CAClient   *p_comp9,
											CAServer   *p_comp11,
											CAServer   *p_comp12){
 
	mp_comp2=p_comp2;
	mp_comp3=p_comp3;
	mp_comp4=p_comp4;
	mp_comp5=p_comp5;
	mp_comp6=p_comp6;
	mp_comp7=p_comp7;
	mp_comp8=p_comp8;
	mp_comp9=p_comp9;
	mp_comp11=p_comp11;
	mp_comp12=p_comp12;
 
	systemCommSAP.SetComponents(	p_comp2,
									p_comp3,
									p_comp4,
									p_comp5,
									p_comp6,
									p_comp7,
									p_comp8,
									p_comp9,
									p_comp11,
									p_comp12);
 
	systemCommSAP.RegisterInterfaces();
	systemCommSAP.SetConnections();
 
}
 
//*****************************************************************************
////StartComponents
 
void CEDROOMSystemDeployment::StartComponents(){
	mp_comp2->EDROOMStart();
	mp_comp3->EDROOMStart();
	mp_comp4->EDROOMStart();
	mp_comp5->EDROOMStart();
	mp_comp6->EDROOMStart();
	mp_comp7->EDROOMStart();
	mp_comp8->EDROOMStart();
	mp_comp9->EDROOMStart();
	mp_comp11->EDROOMStart();
	mp_comp12->EDROOMStart();
 
}
 
//*****************************************************************************
////Start
 
void CEDROOMSystemDeployment::Start(){
 
#ifdef CONFIG_EDROOMBP_DEPLOYMENT_NEED_TASK
 
	Pr_Task MainTask(CEDROOMSystemDeployment::main_task,EDROOMprioMINIMUM,1024*16);
 
	kernel.Start();
 
#else
 
StartComponents();
 
	kernel.Start();
 
	MainWait(*mp_comp2,
				*mp_comp3,
				*mp_comp4,
				*mp_comp5,
				*mp_comp6,
				*mp_comp7,
				*mp_comp8,
				*mp_comp9,
				*mp_comp11,
				*mp_comp12);
 
 
#endif
 
}
 
#ifdef CONFIG_EDROOMBP_DEPLOYMENT_NEED_TASK
 
	extern CEDROOMSystemDeployment systemDeployment;
 
 
//*****************************************************************************
////main_task
 
 
Pr_TaskRV_t CEDROOMSystemDeployment::main_task(Pr_TaskP_t){
 
	systemDeployment.StartComponents();
	MainWait(*systemDeployment.mp_comp2,
				*systemDeployment.mp_comp3,
				*systemDeployment.mp_comp4,
				*systemDeployment.mp_comp5,
				*systemDeployment.mp_comp6,
				*systemDeployment.mp_comp7,
				*systemDeployment.mp_comp8,
				*systemDeployment.mp_comp9,
				*systemDeployment.mp_comp11,
				*systemDeployment.mp_comp12);
 
}
#endif
